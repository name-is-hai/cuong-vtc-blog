name: Deploy Project
on:
  push:
    branches: [master, 'releases/**'] # Only pushes to main and releases branch trigger the workflow.
    paths-ignore:
      - '.github/workflows/**' # Ignore changes to the test workflow file.
  workflow_dispatch:
env:
  PGDATABASE: ${{ secrets.PGDATABASE }}
jobs:
  test:
    env:
      PGHOST: ${{ secrets.PGHOST }}
      PGUSER: ${{ secrets.PGUSER }}
      PGPASSWORD: ${{ secrets.PGPASSWORD }}
    runs-on: ubuntu-latest
    steps:
      - name: Cache Git repository
        uses: actions/cache@v4
        with:
          path: .git
          key: ${{ runner.os }}-git-${{ github.sha }}
      - name: Get code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run typecheck
        run: npm run typecheck
      - name: Run tests
        run: npm run test
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-files
          path: ${{ github.workspace }}/coverage
          if-no-files-found: error
          include-hidden-files: true
      - name: Output project
        run: "echo 'DATABASE_PG_USER: ${{ env.PGUSER }}'"

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Cache Git repository
        uses: actions/cache@v4
        with:
          path: .git
          key: ${{ runner.os }}-git-${{ github.sha }}
      - name: Get code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: ${{ github.workspace }}/.next
          if-no-files-found: error
          include-hidden-files: true

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-files
      - name: Output files
        run: ls -l
      - name: Deploy project
        run: |
          echo "Deploying project..."
          echo "DATABASE_PG_USER: ${{ env.PGDATABASE }}"
