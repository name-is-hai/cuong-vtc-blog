name: Deploy Project
on:
  push:
    branches: [master, 'releases/**'] # Only pushes to main and releases branch trigger the workflow.
    paths-ignore:
      - '.github/workflows/**' # Ignore changes to the test workflow file.
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: environment
        default: 'dev'

jobs:
  test:
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Run lint
        run: npm run lint
      - name: Run typecheck
        run: npm run typecheck
      - name: Run tests
        id: test-step
        run: npm run test
      - name: Upload artifact
        if: ${{ failure() && steps.test-step.conclusion == 'failure' }}
        uses: actions/upload-artifact@v4
        with:
          name: test-files
          path: ${{ github.workspace }}/coverage
          if-no-files-found: error
          include-hidden-files: true

  build:
    environment: ${{ github.event.inputs.environment }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-deps-node-module-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: ${{ steps.cache-deps.outputs.cache-hit != 'true' }}
        run: npm ci
      - name: Build project
        run: npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: ${{ github.workspace }}/.next
          if-no-files-found: error
          include-hidden-files: true
  deploy:
    environment: ${{ github.event.inputs.environment }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-files
      - name: Output files
        run: ls -l
      - name: Deploy project
        run: echo "Deploying project..."
